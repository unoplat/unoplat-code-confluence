"use strict";(self.webpackChunkcode_confluence_docs=self.webpackChunkcode_confluence_docs||[]).push([[471],{3943:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"contribution/custom-framework-schema","title":"Custom Framework/Library Schema","description":"The Custom Framework/Library Schema enables contributors to define framework and library patterns for Code Confluence to detect and analyze across different programming languages. This schema provides a structured way to describe how frameworks and libraries should be identified in codebases.","source":"@site/docs/contribution/custom-framework-schema.md","sourceDirName":"contribution","slug":"/contribution/custom-framework-schema","permalink":"/contribution/custom-framework-schema","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/contribution/custom-framework-schema.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Setup","permalink":"/contribution/setup"}}');var i=s(4848),t=s(8453);const a={sidebar_position:2},l="Custom Framework/Library Schema",o={},c=[{value:"Schema Overview",id:"schema-overview",level:2},{value:"Schema Structure",id:"schema-structure",level:2},{value:"Top Level Structure",id:"top-level-structure",level:3},{value:"Supported Languages",id:"supported-languages",level:3},{value:"Library Definition Structure",id:"library-definition-structure",level:2},{value:"Required Fields",id:"required-fields",level:3},{value:"<code>docs_url</code> (string, URI format)",id:"docs_url-string-uri-format",level:4},{value:"<code>features</code> (object)",id:"features-object",level:4},{value:"Optional Fields",id:"optional-fields",level:3},{value:"<code>version</code> (string)",id:"version-string",level:4},{value:"Feature Definition Structure",id:"feature-definition-structure",level:2},{value:"Required Fields",id:"required-fields-1",level:3},{value:"<code>description</code> (string)",id:"description-string",level:4},{value:"<code>absolute_paths</code> (array of strings)",id:"absolute_paths-array-of-strings",level:4},{value:"<code>target_level</code> (enum)",id:"target_level-enum",level:4},{value:"<code>concept</code> (enum)",id:"concept-enum",level:4},{value:"<code>locator_strategy</code> (enum)",id:"locator_strategy-enum",level:4},{value:"Optional Fields",id:"optional-fields-1",level:3},{value:"<code>docs_url</code> (string, URI format)",id:"docs_url-string-uri-format-1",level:4},{value:"<code>startpoint</code> (boolean, default: false)",id:"startpoint-boolean-default-false",level:4},{value:"<code>notes</code> (string)",id:"notes-string",level:4},{value:"<code>construct_query</code> (object)",id:"construct_query-object",level:4},{value:"Real Framework Examples",id:"real-framework-examples",level:2},{value:"FastAPI Framework",id:"fastapi-framework",level:3},{value:"Pydantic Framework",id:"pydantic-framework",level:3},{value:"SQLAlchemy Framework",id:"sqlalchemy-framework",level:3},{value:"SQLModel Framework",id:"sqlmodel-framework",level:3},{value:"Complete Multi-Framework Example",id:"complete-multi-framework-example",level:3},{value:"Validation Rules",id:"validation-rules",level:2},{value:"Concept-Target Level Constraints",id:"concept-target-level-constraints",level:3},{value:"Pattern Validation",id:"pattern-validation",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Comprehensive Coverage",id:"1-comprehensive-coverage",level:3},{value:"2. Accurate Paths",id:"2-accurate-paths",level:3},{value:"3. Clear Descriptions",id:"3-clear-descriptions",level:3},{value:"4. Proper Categorization",id:"4-proper-categorization",level:3},{value:"5. Strategic Regex Usage",id:"5-strategic-regex-usage",level:3},{value:"Contributing Schema Updates",id:"contributing-schema-updates",level:2},{value:"Testing Your Schema",id:"testing-your-schema",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Invalid absolute_paths",id:"invalid-absolute_paths",level:4},{value:"Missing Required Fields",id:"missing-required-fields",level:4},{value:"Concept-Target Level Mismatch",id:"concept-target-level-mismatch",level:4},{value:"Future Enhancements",id:"future-enhancements",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"custom-frameworklibrary-schema",children:"Custom Framework/Library Schema"})}),"\n",(0,i.jsx)(n.p,{children:"The Custom Framework/Library Schema enables contributors to define framework and library patterns for Code Confluence to detect and analyze across different programming languages. This schema provides a structured way to describe how frameworks and libraries should be identified in codebases."}),"\n",(0,i.jsx)(n.h2,{id:"schema-overview",children:"Schema Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The schema is located at ",(0,i.jsx)(n.code,{children:"/static/schemas/custom-framework-lib-schema.json"})," and follows JSON Schema Draft 2020-12 specification. It organizes framework/library definitions by programming language, with each language containing multiple library definitions."]}),"\n",(0,i.jsx)(n.h2,{id:"schema-structure",children:"Schema Structure"}),"\n",(0,i.jsx)(n.h3,{id:"top-level-structure",children:"Top Level Structure"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "python": {\n    "fastapi": { /* library definition */ },\n    "django": { /* library definition */ }\n  },\n  "javascript": {\n    "express": { /* library definition */ },\n    "react": { /* library definition */ }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"supported-languages",children:"Supported Languages"}),"\n",(0,i.jsx)(n.p,{children:"The schema currently supports these programming languages:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"python"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"javascript"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"typescript"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"java"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"go"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"library-definition-structure",children:"Library Definition Structure"}),"\n",(0,i.jsx)(n.p,{children:"Each library definition must include:"}),"\n",(0,i.jsx)(n.h3,{id:"required-fields",children:"Required Fields"}),"\n",(0,i.jsxs)(n.h4,{id:"docs_url-string-uri-format",children:[(0,i.jsx)(n.code,{children:"docs_url"})," (string, URI format)"]}),"\n",(0,i.jsx)(n.p,{children:"The canonical documentation URL for the library."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "docs_url": "https://fastapi.tiangolo.com/"\n}\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"features-object",children:[(0,i.jsx)(n.code,{children:"features"})," (object)"]}),"\n",(0,i.jsx)(n.p,{children:"A collection of discoverable features keyed by contributor-chosen identifiers."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "features": {\n    "api_endpoint": { /* feature definition */ },\n    "dependency_injection": { /* feature definition */ }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"optional-fields",children:"Optional Fields"}),"\n",(0,i.jsxs)(n.h4,{id:"version-string",children:[(0,i.jsx)(n.code,{children:"version"})," (string)"]}),"\n",(0,i.jsx)(n.p,{children:"Library version used to verify patterns."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.104.1"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"feature-definition-structure",children:"Feature Definition Structure"}),"\n",(0,i.jsx)(n.p,{children:"Each feature within a library must include:"}),"\n",(0,i.jsx)(n.h3,{id:"required-fields-1",children:"Required Fields"}),"\n",(0,i.jsxs)(n.h4,{id:"description-string",children:[(0,i.jsx)(n.code,{children:"description"})," (string)"]}),"\n",(0,i.jsx)(n.p,{children:"Human-readable explanation of the feature."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "description": "FastAPI route decorator for HTTP endpoints"\n}\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"absolute_paths-array-of-strings",children:[(0,i.jsx)(n.code,{children:"absolute_paths"})," (array of strings)"]}),"\n",(0,i.jsx)(n.p,{children:"Fully-qualified import paths identifying the constructor/base class/annotation provider."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "absolute_paths": [\n    "fastapi.FastAPI",\n    "fastapi.applications.FastAPI"\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.h4,{id:"target_level-enum",children:[(0,i.jsx)(n.code,{children:"target_level"})," (enum)"]}),"\n",(0,i.jsx)(n.p,{children:"Granularity of the code element that owns the feature."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"function"'})," - Function-level features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"class"'})," - Class-level features"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"concept-enum",children:[(0,i.jsx)(n.code,{children:"concept"})," (enum)"]}),"\n",(0,i.jsx)(n.p,{children:"Language-agnostic construct category:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"AnnotationLike"'})," - Decorators, annotations, attributes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"CallExpression"'})," - Function/method calls"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"Inheritance"'})," - Class inheritance patterns"]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"locator_strategy-enum",children:[(0,i.jsx)(n.code,{children:"locator_strategy"})," (enum)"]}),"\n",(0,i.jsx)(n.p,{children:"How to locate the feature in code:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"VariableBound"'})," - Discover identifiers bound to a constructor/factory first"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"Direct"'})," - Match the symbol verbatim"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"optional-fields-1",children:"Optional Fields"}),"\n",(0,i.jsxs)(n.h4,{id:"docs_url-string-uri-format-1",children:[(0,i.jsx)(n.code,{children:"docs_url"})," (string, URI format)"]}),"\n",(0,i.jsx)(n.p,{children:"Feature-specific documentation URL."}),"\n",(0,i.jsxs)(n.h4,{id:"startpoint-boolean-default-false",children:[(0,i.jsx)(n.code,{children:"startpoint"})," (boolean, default: false)"]}),"\n",(0,i.jsx)(n.p,{children:"Indicates if this feature represents an entry point (API endpoints, message consumers, etc.)."}),"\n",(0,i.jsxs)(n.h4,{id:"notes-string",children:[(0,i.jsx)(n.code,{children:"notes"})," (string)"]}),"\n",(0,i.jsx)(n.p,{children:"Contributor notes, caveats, or additional links."}),"\n",(0,i.jsxs)(n.h4,{id:"construct_query-object",children:[(0,i.jsx)(n.code,{children:"construct_query"})," (object)"]}),"\n",(0,i.jsx)(n.p,{children:"Optional refinements to the auto-generated Tree-sitter query. Available keys depend on the feature's concept:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"method_regex"})," - Regular expression for method names"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"annotation_name_regex"})," - Regular expression for annotation names"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"attribute_regex"})," - Regular expression for attribute names"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"callee_regex"})," - Regular expression for function call names"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"superclass_regex"})," - Regular expression for superclass names"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"real-framework-examples",children:"Real Framework Examples"}),"\n",(0,i.jsx)(n.p,{children:"Here are actual examples from the Code Confluence codebase:"}),"\n",(0,i.jsx)(n.h3,{id:"fastapi-framework",children:"FastAPI Framework"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "python": {\n    "fastapi": {\n      "docs_url": "https://fastapi.tiangolo.com",\n      "features": {\n        "http_endpoint": {\n          "description": "HTTP verb decorator that registers a route handler",\n          "absolute_paths": [\n            "fastapi.FastAPI",\n            "fastapi.applications.FastAPI"\n          ],\n          "target_level": "function",\n          "concept": "AnnotationLike",\n          "locator_strategy": "VariableBound",\n          "construct_query": {\n            "method_regex": "(get|post|put|delete|patch|head|options|trace)"\n          },\n          "startpoint": true\n        },\n        "background_tasks": {\n          "description": "Background task execution using BackgroundTasks",\n          "absolute_paths": [\n            "fastapi.BackgroundTasks"\n          ],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        },\n        "api_router": {\n          "description": "Route organization using APIRouter",\n          "absolute_paths": [\n            "fastapi.APIRouter"\n          ],\n          "target_level": "function",\n          "concept": "AnnotationLike",\n          "locator_strategy": "VariableBound",\n          "construct_query": {\n            "method_regex": "(get|post|put|delete|patch|head|options|trace|include_router)"\n          },\n          "startpoint": true\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"pydantic-framework",children:"Pydantic Framework"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "python": {\n    "pydantic": {\n      "docs_url": "https://docs.pydantic.dev",\n      "features": {\n        "data_model": {\n          "description": "Base class for Pydantic models with automatic validation",\n          "absolute_paths": [\n            "pydantic.BaseModel",\n            "pydantic.main.BaseModel"\n          ],\n          "target_level": "class",\n          "concept": "Inheritance",\n          "locator_strategy": "Direct"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"sqlalchemy-framework",children:"SQLAlchemy Framework"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "python": {\n    "sqlalchemy": {\n      "docs_url": "https://docs.sqlalchemy.org",\n      "features": {\n        "declarative_base": {\n          "description": "Base class for SQLAlchemy declarative models",\n          "absolute_paths": [\n            "sqlalchemy.ext.declarative.declarative_base",\n            "sqlalchemy.orm.declarative_base"\n          ],\n          "target_level": "class",\n          "concept": "Inheritance",\n          "locator_strategy": "VariableBound"\n        },\n        "mapped_column": {\n          "description": "Column definition using mapped_column for modern SQLAlchemy",\n          "absolute_paths": [\n            "sqlalchemy.orm.mapped_column"\n          ],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        },\n        "relationship": {\n          "description": "Relationship definition between models",\n          "absolute_paths": [\n            "sqlalchemy.orm.relationship"\n          ],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        },\n        "column": {\n          "description": "Traditional column definition using Column",\n          "absolute_paths": [\n            "sqlalchemy.Column",\n            "sqlalchemy.sql.schema.Column"\n          ],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"sqlmodel-framework",children:"SQLModel Framework"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "python": {\n    "sqlmodel": {\n      "docs_url": "https://sqlmodel.tiangolo.com",\n      "features": {\n        "sqlmodel_base": {\n          "description": "Base class for SQLModel models combining Pydantic and SQLAlchemy",\n          "absolute_paths": [\n            "sqlmodel.SQLModel"\n          ],\n          "target_level": "class",\n          "concept": "Inheritance",\n          "locator_strategy": "Direct"\n        },\n        "field_definition": {\n          "description": "Field definition using Field() function with SQLModel extensions",\n          "absolute_paths": [\n            "sqlmodel.Field"\n          ],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        },\n        "relationship": {\n          "description": "Relationship definition between SQLModel models",\n          "absolute_paths": [\n            "sqlmodel.Relationship"\n          ],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"complete-multi-framework-example",children:"Complete Multi-Framework Example"}),"\n",(0,i.jsx)(n.p,{children:"Here's how multiple frameworks can be combined in a single schema file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "python": {\n    "fastapi": {\n      "docs_url": "https://fastapi.tiangolo.com",\n      "features": {\n        "http_endpoint": {\n          "description": "HTTP verb decorator that registers a route handler",\n          "absolute_paths": ["fastapi.FastAPI"],\n          "target_level": "function",\n          "concept": "AnnotationLike",\n          "locator_strategy": "VariableBound",\n          "construct_query": {\n            "method_regex": "(get|post|put|delete|patch|head|options|trace)"\n          },\n          "startpoint": true\n        }\n      }\n    },\n    "pydantic": {\n      "docs_url": "https://docs.pydantic.dev",\n      "features": {\n        "data_model": {\n          "description": "Base class for Pydantic models with automatic validation",\n          "absolute_paths": ["pydantic.BaseModel"],\n          "target_level": "class",\n          "concept": "Inheritance",\n          "locator_strategy": "Direct"\n        }\n      }\n    },\n    "sqlalchemy": {\n      "docs_url": "https://docs.sqlalchemy.org",\n      "features": {\n        "mapped_column": {\n          "description": "Column definition using mapped_column for modern SQLAlchemy",\n          "absolute_paths": ["sqlalchemy.orm.mapped_column"],\n          "target_level": "function",\n          "concept": "CallExpression",\n          "locator_strategy": "Direct"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,i.jsx)(n.p,{children:"The schema includes several validation rules:"}),"\n",(0,i.jsx)(n.h3,{id:"concept-target-level-constraints",children:"Concept-Target Level Constraints"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CallExpression"})," features must use ",(0,i.jsx)(n.code,{children:'target_level: "function"'})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inheritance"})," features must use ",(0,i.jsx)(n.code,{children:'target_level: "class"'})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-validation",children:"Pattern Validation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"absolute_paths"})," must follow the pattern: ",(0,i.jsx)(n.code,{children:"^[A-Za-z_][\\\\w]*(\\\\.[A-Za-z_][\\\\w]*)+$"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Language keys"})," must be lowercase and match the supported languages enum"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Library names"})," can be any non-empty string"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-comprehensive-coverage",children:"1. Comprehensive Coverage"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Define all major features of a framework/library"}),"\n",(0,i.jsx)(n.li,{children:"Include both common and advanced usage patterns"}),"\n",(0,i.jsx)(n.li,{children:"Cover different ways the same concept might be expressed"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-accurate-paths",children:"2. Accurate Paths"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use fully-qualified import paths"}),"\n",(0,i.jsx)(n.li,{children:"Test paths against actual library documentation"}),"\n",(0,i.jsx)(n.li,{children:"Include version information when patterns change between versions"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-clear-descriptions",children:"3. Clear Descriptions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Write human-readable descriptions"}),"\n",(0,i.jsx)(n.li,{children:"Explain the purpose and context of each feature"}),"\n",(0,i.jsx)(n.li,{children:"Include examples in notes when helpful"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-proper-categorization",children:"4. Proper Categorization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Choose appropriate ",(0,i.jsx)(n.code,{children:"concept"})," values based on how the feature is used"]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"startpoint: true"})," for entry points like API endpoints"]}),"\n",(0,i.jsxs)(n.li,{children:["Set correct ",(0,i.jsx)(n.code,{children:"target_level"})," based on where the feature applies"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-strategic-regex-usage",children:"5. Strategic Regex Usage"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"construct_query"})," regex patterns to refine matches"]}),"\n",(0,i.jsx)(n.li,{children:"Test regex patterns against real code examples"}),"\n",(0,i.jsx)(n.li,{children:"Keep patterns specific enough to avoid false positives"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"contributing-schema-updates",children:"Contributing Schema Updates"}),"\n",(0,i.jsx)(n.p,{children:"To contribute new framework/library definitions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fork the repository"})," and create a feature branch"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Update the schema file"})," at ",(0,i.jsx)(n.code,{children:"/static/schemas/custom-framework-lib-schema.json"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add comprehensive definitions"})," following the structure above"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test your definitions"})," against real codebases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Submit a pull request"})," with detailed examples and test cases"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"testing-your-schema",children:"Testing Your Schema"}),"\n",(0,i.jsx)(n.p,{children:"Before submitting, verify your schema definitions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JSON Validation"}),": Ensure the file is valid JSON"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Schema Validation"}),": Validate against the JSON Schema specification"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-world Testing"}),": Test against actual codebases using the framework"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation"}),": Ensure all referenced URLs are accessible"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.h4,{id:"invalid-absolute_paths",children:"Invalid absolute_paths"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Error: Pattern does not match required format\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Ensure paths follow the format ",(0,i.jsx)(n.code,{children:"module.submodule.symbol"})]}),"\n",(0,i.jsx)(n.h4,{id:"missing-required-fields",children:"Missing Required Fields"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Error: Missing required property 'target_level'\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Include all required fields in feature definitions"]}),"\n",(0,i.jsx)(n.h4,{id:"concept-target-level-mismatch",children:"Concept-Target Level Mismatch"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Error: CallExpression requires target_level 'function'\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Follow the concept-target level constraints outlined above"]}),"\n",(0,i.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,i.jsx)(n.p,{children:"The schema is designed to be extensible. Future versions may include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Additional programming languages"}),"\n",(0,i.jsx)(n.li,{children:"More concept types for different framework/library constructs"}),"\n",(0,i.jsx)(n.li,{children:"Enhanced query refinement options"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);