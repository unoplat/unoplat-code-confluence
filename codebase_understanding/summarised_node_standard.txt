## Class Summary
The `OrderController` class handles HTTP requests related to order management within an e-commerce application. It provides functionality to list all orders, create a new order, update existing orders, and delete orders using CRUD operations through the `OrderRepository`.

## Fields
- **orderRepository**: Injected dependency of type `OrderRepository` which is responsible for database interactions related to orders.

## Methods

### root()
Return Type: `ModelAndView`
Summary: Redirects the user to the Swagger UI documentation page.
External Calls: None

### createOrder(Order order)
Return Type: `Order`
Summary: Creates a new order in the database by saving it through the repository and returns the saved Order object.
External Calls: OrderRepository.`save()` method to persist the new Order entity.

### updateOrder(UUID oid, UUID pid, Order order)
Return Type: `Order`
Summary: Updates an existing order in the database using its unique identifiers and sets new values for it based on the provided Order object. Returns the updated Order object.
External Calls: 
- `order.getKey().setOrderId(oid)` to set the order's ID,
- `order.getKey().setProductId(pid)` to set the product's ID associated with this order.
- OrderRepository.`save()` method to persist the updated Order entity.

### deleteOrder(UUID oid, UUID pid)
Return Type: Void
Summary: Deletes a specific order from the database using its unique identifiers (order and product IDs).
External Calls: OrderRepository.`deleteByKeyOrderIdAndKeyProductId()` method to remove the specified order.

### deleteOrders(UUID oid)
Return Type: Void
Summary: Deletes all orders associated with a specific order ID from the database.
External Calls: OrderRepository.`deleteByKeyOrderId()` method to remove all orders linked by that order ID.

### findOrder(UUID oid, UUID pid)
Return Type: `ProductNameAndPrice`
Summary: Retrieves an individual order's details (name and price of the associated product) from the database using its unique identifiers (order and product IDs).
External Calls: OrderRepository.`findByKeyOrderIdAndKeyProductId()` method to fetch a specific order.

### findOrders(UUID oid)
Return Type: `List<ProductNameAndPrice>`
Summary: Retrieves a list of all orders associated with the provided order ID from the database, including their product names and prices.
External Calls: OrderRepository.`findByKeyOrderId()` method to fetch multiple orders linked by that order ID.

### findAll()
Return Type: `List<ProductNameAndPrice>`
Summary: Fetches a list of all orders from the database, including their product names and prices.
External Calls: OrderRepository.`findAllProjectedBy()` method to retrieve all orders with projected fields for efficiency.